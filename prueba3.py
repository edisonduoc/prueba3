# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a5I56hEkD-bm-yLvcormrqHbFl_k_EgT
"""

# Registrar trabajador
import csv
prueba=True
nombre=""
apellido=""
cargos=""
mesero=""
cocinero=""
cajero=""
sueldo_bruto=0
dic_cargo={"mesero": mesero,"cocinero": cocinero, "cajero": cajero}
lista_trabajador=[]
lista_trabajadores=[]
lista_cargos=[]
lista_meseros=[]
lista_cocineros=[]
lista_cajeros=[]
datos_sueldo=[]

def mostrar_menu():
  print("Bienvenido a noCompila\n\n1) Registrar Trabajador\n2) Listar Trabajadores\n3) Imprimir Planilla de sueldos por cargo\n4) Salir\n")

def cargar_trabajador():
  try:
    with open('prueba.csv','r',newline='') as archivo_csv:
      lector_csv = csv.reader(archivo_csv)
      next(lector_csv,None)
      for fila in lector_csv:
        nombre, apellido, sueldo_bruto1, desc_afp, desc_salud, sueldo_liquido, cargo= fila
        lista_trabajadores.append(nombre)
        lista_trabajadores.append(apellido)
        lista_trabajadores.append(int(sueldo_bruto1))
        lista_trabajadores.append(int(desc_afp))
        lista_trabajadores.append(int(desc_salud))
        lista_trabajadores.append(int(sueldo_liquido))
        lista_trabajadores.append(cargo)
  except FileNotFoundError:
    with open('prueba.csv','w',newline='') as archivo_csv:
      escritor_csv = csv.writer(archivo_csv)
      escritor_csv.writerow(["nombre","apellido","sueldo_bruto","desc_afp","desc_salud","sueldo_liquido","cargo"])

def guardar_trabajador():
  with open('prueba.csv','w',newline='') as archivo_csv:
    escritor_csv = csv.writer(archivo_csv)
    escritor_csv.writerow(["nombre","apellido","sueldo_bruto","desc_afp","desc_salud","sueldo_liquido","cargo"])
    escritor_csv.writerows(lista_trabajadores)

def crear_trabajador(nombre,apellido,sueldo_bruto1,desc_afp,desc_salud,sueldo_liquido,cargo):
  lista_trabajador = [nombre,apellido,sueldo_bruto1,desc_afp,desc_salud,sueldo_liquido,cargo]
  lista_trabajadores.append(lista_trabajador)
  print(f"Trabajador {nombre} registrado exitosamente")
  guardar_trabajador()

def leer_trabajador():
  if not lista_trabajadores:
    print("No hay trabajadores registrados")
  else:
    print("Lista de trabajadores")
    for lista_trabajador in lista_trabajadores:
      print(lista_trabajadores)

